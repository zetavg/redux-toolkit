name: Publish
run-name: Publish ${{ github.event_name == 'release' && github.event.release.tag_name || inputs.version }}
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        type: string
        required: true

permissions:
  packages: write

jobs:
  test:
    name: Test
    uses: ./.github/workflows/test.yml
    secrets: inherit

  prepare-publish:
    runs-on: ubuntu-latest
    outputs:
      workspace-paths: ${{ steps.list-workspaces.outputs.workspace-paths }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          skip-yarn-install: true
      - name: List packages
        uses: zetavg/yarn-workspaces-list-action@v2.beta2
        id: list-workspaces
        with:
          condition: '[ -f "$workspace_path/package.json" ] && jq -e ".scripts.publish" "$workspace_path/package.json"'

  publish:
    name: Publish
    needs:
      # - test # TODO: Need this!
      - prepare-publish
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Allow all jobs to complete even if one or more fails.
      matrix:
        environment:
          - 'NPM'
          - 'GitHub Packages'
        package-path: ${{ fromJson(needs.prepare-publish.outputs.workspace-paths) }}
    environment:
      name: ${{ matrix.environment }}
      url: ${{ steps.publish.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
      - name: Publish package
        id: publish
        uses: ./.github/actions/yarn-npm-publish
        with:
          # Example: https://registry.npmjs.org for NPM or https://npm.pkg.github.com for GitHub Packages
          npm-registry-server: ${{ vars.NPM_REGISTRY_SERVER }}
          # Get a token at https://www.npmjs.com/settings/<your-name>/tokens/granular-access-tokens/new
          # Also, remember to set "Publishing access" to "Require two-factor authentication or an automation or granular access token" in the package settings on npmjs.com
          # While publishing to GitHub Packages, NPM_AUTH_TOKEN can be omitted so that the automatically generated GITHUB_TOKEN is used - in this case, remember to set the "packages" permission to "write" in the workflow, and also give this repository's actions write access in the package settings.
          npm-auth-token: ${{ secrets.NPM_AUTH_TOKEN || secrets.GITHUB_TOKEN}}
          # The version for publishing. The version in package.json will be updated to this value temporarily so that the package can be published with this version. The heading "v" will be removed if it exists (e.g. "v1.0.0" will be "1.0.0"). If the version includes a hyphen (e.g. "1.2.3-pre1"), the package will be published with the "next" tag, otherwise with the "latest" tag.
          version: ${{ github.event_name == 'release' && github.event.release.tag_name || inputs.version}}
          working-directory: ${{ matrix.package-path }}
          publish-command: 'yarn run publish'
          package-page-url: ${{ vars.PACKAGE_PAGE_URL }} # Optional
